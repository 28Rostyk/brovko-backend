{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger for Brovko-project",
    "description": "Showing off swagger-ui-express"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://brovko-backend.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth endpoints"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Orders",
      "description": "Products endpoints"
    }
  ],
  "paths": {
    "/api/user/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "api/user/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
     "api/user/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Current user",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful current",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products": {
      "post": {
        "tags": ["Products"],
        "summary": "Getting all products",
         "parameters": [],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful getting all products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error fetching products"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "min6symbols"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "required": ["email", "token"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": "548945443843478374"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "description": "User's id",
            "example": "548945443843478374"
          },
          "user": {
            "type": "object"
          }
        }
      },
      "CurrentRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "favoriteOrders": {
            "type": "string"
          }
        }
      },
      "ProductsRequest": {
        "type": "object",
        "properties": {
          "totalPage": {
            "type": "string"
          },
          "totalItems": {
            "type": "string"
          },
          "perPage": {
            "type": "string"
          },
          "currentPage": {
            "type": "string"
          },
          "products": {
            "type": "array"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
